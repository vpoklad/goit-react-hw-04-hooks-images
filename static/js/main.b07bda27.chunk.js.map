{"version":3,"sources":["Services/pixabayAPI.js","ImageGallery/ImageGalleryItem.jsx","Modal/Modal.jsx","Loader/Loader.js","ImageGallery/ImageGallery.jsx","Searchbar/Searchbar.jsx","App.js","index.js"],"names":["pixabayAPI","this","api_key","_searchQuery","_page","value","a","url","searchQuery","axios","get","result","data","message","ImageGalleryItem","item","handleImageClick","webformatURL","largeImageURL","tags","className","src","alt","onClick","modalRoot","document","querySelector","Modal","onModalClose","useEffect","window","addEventListener","handleEscKey","removeEventListener","e","code","createPortal","target","currentTarget","MyLoader","viewBox","x","y","rx","ry","width","height","picsearch","ImageGallery","useState","searchResults","setSearchResults","searchHits","setSearchHits","status","setStatus","largeURL","setLargeURL","errorMessage","setErrorMessage","resetPage","search","then","hits","length","total","map","el","id","type","page","prev","scrollTo","top","documentElement","scrollHeight","behavior","catch","er","title","text","Searchbar","onSubmit","searchInput","setSearchInput","preventDefault","trim","alert","autoComplete","autoFocus","placeholder","onChange","App","searchQue","setSearchQue","input","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b07bda27.chunk.js","sourcesContent":["import axios from 'axios';\r\nexport default class pixabayAPI {\r\n  constructor() {\r\n    this.api_key = '23050146-8315646a187241c7ace27efa4';\r\n    this._searchQuery = '';\r\n    this._page = 1;\r\n  }\r\n  get searchQuery() {\r\n    return this._searchQuery;\r\n  }\r\n  set searchQuery(value) {\r\n    return (this._searchQuery = value);\r\n  }\r\n  get page() {\r\n    return this._page;\r\n  }\r\n  set page(value) {\r\n    return (this._page += value);\r\n  }\r\n  resetPage() {\r\n    return (this._page = 1);\r\n  }\r\n\r\n  async search() {\r\n    let url = `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${this.searchQuery}&page=${this._page}&per_page=15&key=${this.api_key}\r\n`;\r\n\r\n    try {\r\n      const result = await axios.get(url);\r\n      const data = result.data;\r\n      return data;\r\n    } catch (err) {\r\n      return err.message;\r\n    }\r\n  }\r\n}\r\n","\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function ImageGalleryItem({ item, handleImageClick }) {\r\n   \r\n    const {webformatURL, largeImageURL, tags,} = item\r\n    \r\n        return (\r\n           <li className=\"ImageGalleryItem\" >\r\n   <img src={webformatURL} alt={tags}  onClick ={() => handleImageClick(largeImageURL)} className=\"ImageGalleryItem-image\" />\r\n </li> \r\n        )\r\n    \r\n};\r\n\r\n\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n    item: PropTypes.shape({\r\n        webformatURL: PropTypes.string,    \r\n        largeURL: PropTypes.string,\r\n        tags: PropTypes.string,\r\n    }),\r\n    handleImageClick: PropTypes.func.isRequired,\r\n}","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from 'prop-types'\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\n\r\nexport default function Modal({ largeImageURL, onModalClose }){\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleEscKey)\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEscKey)\r\n    }\r\n  });\r\n  \r\n\r\n  const handleOverlayclick = (e) => {\r\n   \r\n  if (e.target === e.currentTarget) {\r\n    onModalClose()\r\n  }\r\n  }\r\n  const handleEscKey = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onModalClose()\r\n    }\r\n  };\r\n\r\n    \r\n            return( createPortal(   <div className=\"Overlay\" onClick ={handleOverlayclick}>\r\n  <div className=\"Modal\" >\r\n    <img src={largeImageURL} alt=\"\" />\r\n  </div>\r\n</div>, modalRoot))    \r\n    \r\n};\r\n\r\nModal.propTypes = {\r\n  largeImageURL : PropTypes.string,\r\n  onModalClose: PropTypes.func.isRequired,\r\n}","import ContentLoader from 'react-content-loader';\r\nconst MyLoader = () => (\r\n  <ContentLoader viewBox=\"0 0 640 390\">\r\n    {/* Only SVG shapes */}\r\n    <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"640\" height=\"390\" />\r\n  </ContentLoader>\r\n);\r\n\r\nexport default MyLoader;\r\n","// import PropTypes from 'prop-types'\r\nimport { useState, useEffect } from 'react'\r\nimport pixabayAPI from '../Services/pixabayAPI'\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport Modal from '../Modal/Modal';\r\nimport MyLoader from '../Loader/Loader'\r\nimport { Notification } from 'react-pnotify'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nconst picsearch = new pixabayAPI();\r\n\r\nexport default function ImageGallery({searchQuery}) {\r\n    \r\n  const [searchResults, setSearchResults ] = useState([]);\r\n  const [searchHits, setSearchHits ] = useState(null);\r\n  const [status, setStatus ] = useState(\"init\");\r\n  const [largeURL, setLargeURL ] = useState(\"\");\r\n  const [errorMessage, setErrorMessage ] = useState(\"\");\r\n\r\n    \r\n  useEffect(() => {\r\n    if (searchQuery === \"\") {\r\n      return      \r\n    };\r\n    setStatus(\"pending\");\r\n    picsearch.resetPage();\r\n    picsearch.searchQuery = searchQuery;\r\n    picsearch.search()\r\n      .then(searchResults => {\r\n        if (searchResults.hits.length > 0) {\r\n          setSearchResults(searchResults.hits);\r\n          setSearchHits(searchResults.total);\r\n          setStatus(\"success\");         \r\n        }\r\n        else {\r\n          setErrorMessage(\"Nothing found!\");\r\n          setStatus(\"error\");          \r\n        }\r\n      });      \r\n  }, [searchQuery]);    \r\n    \r\n\r\n    const handleImageClick = (value) => {\r\n      setLargeURL(value);\r\n      setStatus(\"modal\"); \r\n     \r\n  }\r\n  \r\n    const onModalClose = () => {\r\n        setStatus(\"success\"); \r\n  }\r\n  \r\n   const handleClick = (e) => {            \r\n      picsearch.page = 1;\r\n      picsearch.search()\r\n        .then(searchResults => {\r\n          setSearchResults((prev)=>[...prev, ...searchResults.hits]);\r\n          setStatus(\"success\"); \r\n          \r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          })\r\n        })\r\n        .catch((er) => {\r\n          setErrorMessage(er);\r\n          setStatus(\"error\");          \r\n        });        \r\n    }  \r\n   \r\n    if (status === 'init') {\r\n      return <h1 className=\"title\">Hello! Search something</h1>;\r\n    }\r\n   if (status === 'pending') {\r\n     return <ul className=\"ImageGallery\">\r\n       {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,13,14,15].map((el) => <MyLoader key={el} />)}\r\n     </ul>}\r\n    if (status === 'success') {\r\n      return (\r\n        <>\r\n              <ul className=\"ImageGallery\">\r\n                  {searchResults.map(el => (\r\n                      \r\n                    < ImageGalleryItem key ={el.id} item={el} handleImageClick = {handleImageClick} />)                                      \r\n                   \r\n                )}\r\n            </ul>\r\n              {(searchHits > 15) && <button className =\"Button\" type=\"button\" id='more' onClick={handleClick}>\r\n                  load more\r\n              </button>}\r\n          \r\n        </>\r\n      );\r\n     }\r\n     if (status === 'modal') {\r\n         return <Modal largeImageURL={ largeURL} onModalClose = {onModalClose} />\r\n     }\r\n   if (status === 'error') {\r\n      \r\n      return <Notification\r\n        type='Error'\r\n        title='Error'\r\n        text={errorMessage}\r\n       \r\n      />\r\n  }\r\n  \r\n\r\n  \r\n};\r\n\r\nImageGallery.propTypes = {\r\n  searchQuery: PropTypes.string,\r\n}\r\n           \r\n","import PropTypes from 'prop-types'\r\nimport { useState } from 'react'\r\n\r\n\r\n \r\n\r\nexport default function Searchbar ({ onSubmit }) {\r\n    \r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    \r\n    \r\n    const handlerChange = (e) => {\r\n        setSearchInput(e.target.value)\r\n    };\r\n\r\n   const handleSubmit = (e) => {\r\n        \r\n        e.preventDefault()\r\n        if (searchInput.trim() === \"\") {\r\n            alert('Input something!')\r\n            return              \r\n        }\r\n       onSubmit(searchInput);\r\n       setSearchInput('');\r\n    }\r\n\r\n    \r\n\r\n        return(\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n    \r\n        <input\r\n          className=\"SearchForm-input\"\r\n          value={searchInput}\r\n          type=\"search\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handlerChange}\r\n        />\r\n      </form>\r\n    </header>\r\n        )\r\n        \r\n    \r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","// import './App.css';\r\n\r\nimport { useState } from 'react';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\nimport Searchbar from './Searchbar/Searchbar';\r\n\r\nfunction App () {\r\n  const [searchQue, setSearchQue] = useState('');\r\n  \r\n  const onFormSubmit = input => {\r\n    setSearchQue(input);\r\n  };\r\n\r\n  \r\n    return (\r\n      <div className=\"App\">\r\n        <Searchbar onSubmit={onFormSubmit} />\r\n        <ImageGallery searchQuery={searchQue} />\r\n      </div>\r\n    );\r\n  \r\n};\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// // If you want to start measuring performance in your app, pass a function\r\n// // to log results (for example: reportWebVitals(console.log))\r\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}